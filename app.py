# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12h__oqmZFT54fl0WNH3b1HeB1bCCMj3D
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split

# Load and prepare the data (you can also save and load the model if needed)
@st.cache_data
def train_model():
    df = pd.read_csv("Insurancepredc.csv")

    # Label Encoding
    le_sex = LabelEncoder()
    le_region = LabelEncoder()
    le_smoker = LabelEncoder()

    df['sex'] = le_sex.fit_transform(df['sex'])
    df['region'] = le_region.fit_transform(df['region'])
    df['smoker'] = le_smoker.fit_transform(df['smoker'])

    X = df[['age', 'sex', 'bmi', 'children', 'smoker', 'region']]
    y = df['charges']

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = LinearRegression()
    model.fit(X_train, y_train)

    return model, le_sex, le_smoker, le_region

model, le_sex, le_smoker, le_region = train_model()

# Streamlit UI
st.set_page_config(page_title="ðŸ’° Insurance Charge Predictor", layout="centered")

st.title("ðŸ’° Insurance Charge Prediction")
st.markdown("Enter the details below to estimate your insurance charges:")

# Input fields
age = st.number_input("Age", min_value=1, max_value=120, value=25)
sex = st.selectbox("Sex", ["male", "female"])
bmi = st.number_input("BMI", min_value=10.0, max_value=50.0, value=25.0)
children = st.slider("Number of Children", 0, 10, 0)
smoker = st.selectbox("Smoker", ["yes", "no"])
region = st.selectbox("Region", ["southwest", "southeast", "northwest", "northeast"])

# Predict button
if st.button("Predict Charges"):
    # Encode input
    sex_encoded = le_sex.transform([sex])[0]
    smoker_encoded = le_smoker.transform([smoker])[0]
    region_encoded = le_region.transform([region])[0]

    # Create input array
    input_data = np.array([[age, sex_encoded, bmi, children, smoker_encoded, region_encoded]])

    # Predict
    predicted_charge = model.predict(input_data)[0]
    st.success(f"Estimated Insurance Charges: ${predicted_charge:,.2f}")